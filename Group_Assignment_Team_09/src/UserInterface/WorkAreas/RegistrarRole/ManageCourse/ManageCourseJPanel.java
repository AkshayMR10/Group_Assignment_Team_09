/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UserInterface.WorkAreas.RegistrarRole.ManageCourse;

import Business.Business;
import Business.CourseCatalog.Course;
import Business.CourseSchedule.CourseOffer;
import Business.CourseSchedule.CourseSchedule;
import Business.Profiles.FacultyProfile;
import java.util.HashMap;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author anush
 */
public class ManageCourseJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManageCourseJPanel
     */
    
    JPanel CardSequencePanel;
    Business business;
    CourseOffer selectedCourseOffer;
    
           
        
    public ManageCourseJPanel(Business b, JPanel jp) {
        initComponents();
        this.business = b;
        this.CardSequencePanel = jp;
        populateSemesterCombo();
        populateFacultyCombo();
        refreshTable();
        
        tblCourses.getSelectionModel().addListSelectionListener(e -> {
            if (!e.getValueIsAdjusting()) {
                populateFieldsFromTable();
            }
        });
    }

    private void populateSemesterCombo() {
        cmbSemester.removeAllItems();
        cmbSemester.addItem("-- Select Semester --");

        HashMap<String, CourseSchedule> schedules = business.getMasterCourseCatalog();
        for (String semester : schedules.keySet()) {
            cmbSemester.addItem(semester);
        }
    }
    
    private void populateFacultyCombo() {
    cmbFaculty.removeAllItems();
    cmbFaculty.addItem("-- Select Faculty --");

    for (FacultyProfile fp : business.getFacultyDirectory().getFacultyList()) {
        cmbFaculty.addItem(fp.getPerson().getName());
    }


}


    
    private void refreshTable() {
        DefaultTableModel model = (DefaultTableModel) tblCourses.getModel();
        model.setRowCount(0);

        HashMap<String, CourseSchedule> schedules = business.getMasterCourseCatalog();

        for (String semester : schedules.keySet()) {
            CourseSchedule cs = schedules.get(semester);

            for (CourseOffer co : cs.getSchedule()) {
                Object[] row = new Object[7];
                row[0] = co.getCourseNumber();
                row[1] = co.getSubjectCourse().getName();
                row[2] = semester;

                FacultyProfile fp = co.getFacultyProfile();
                row[3] = (fp != null) ? fp.getPerson().getName() : "Not Assigned";
                row[4] = co.getCapacity();
                row[5] = co.getRoom();
                row[6] = co.getSchedule();

                model.addRow(row);
            }
        }
    }
    
    private void clearFields() {
        txtCourseId.setText("");
        txtCourseName.setText("");
        txtCapacity.setText("");
        txtRoom.setText("");
        txtSchedule.setText("");
        cmbSemester.setSelectedIndex(0);
        cmbFaculty.setSelectedIndex(0);
    }

    private void populateFieldsFromTable() {
        int selectedRow = tblCourses.getSelectedRow();
        if (selectedRow < 0) return;

        txtCourseId.setText(tblCourses.getValueAt(selectedRow, 0).toString());
        txtCourseName.setText(tblCourses.getValueAt(selectedRow, 1).toString());
        cmbSemester.setSelectedItem(tblCourses.getValueAt(selectedRow, 2));
        cmbFaculty.setSelectedItem(tblCourses.getValueAt(selectedRow, 3));
        txtCapacity.setText(tblCourses.getValueAt(selectedRow, 4).toString());
        txtRoom.setText(tblCourses.getValueAt(selectedRow, 5).toString());
        txtSchedule.setText(tblCourses.getValueAt(selectedRow, 6).toString());
    }



    



    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblTitle = new javax.swing.JLabel();
        lblCourseId = new javax.swing.JLabel();
        txtCourseId = new javax.swing.JTextField();
        lblCourseName = new javax.swing.JLabel();
        txtCourseName = new javax.swing.JTextField();
        lblSemester = new javax.swing.JLabel();
        lblFaculty = new javax.swing.JLabel();
        lblCapacity = new javax.swing.JLabel();
        txtCapacity = new javax.swing.JTextField();
        txtRoom = new javax.swing.JTextField();
        lblRoom = new javax.swing.JLabel();
        lblSchedule = new javax.swing.JLabel();
        txtSchedule = new javax.swing.JTextField();
        cmbSemester = new javax.swing.JComboBox<>();
        cmbFaculty = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblCourses = new javax.swing.JTable();
        btnBack = new javax.swing.JButton();
        btnAdd = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnReset = new javax.swing.JButton();

        setBackground(new java.awt.Color(0, 153, 153));

        lblTitle.setFont(new java.awt.Font("Segoe UI", 1, 20)); // NOI18N
        lblTitle.setText("Manage Course Offerings");

        lblCourseId.setFont(new java.awt.Font("Dubai", 1, 14)); // NOI18N
        lblCourseId.setText("Course ID:");

        txtCourseId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCourseIdActionPerformed(evt);
            }
        });

        lblCourseName.setFont(new java.awt.Font("Dubai", 1, 14)); // NOI18N
        lblCourseName.setText("Course Name:");

        txtCourseName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCourseNameActionPerformed(evt);
            }
        });

        lblSemester.setFont(new java.awt.Font("Dubai", 1, 14)); // NOI18N
        lblSemester.setText("Semester:");

        lblFaculty.setFont(new java.awt.Font("Dubai", 1, 14)); // NOI18N
        lblFaculty.setText("Faculty:");

        lblCapacity.setFont(new java.awt.Font("Dubai", 1, 14)); // NOI18N
        lblCapacity.setText("Enrollment Capacity:");

        txtCapacity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCapacityActionPerformed(evt);
            }
        });

        txtRoom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtRoomActionPerformed(evt);
            }
        });

        lblRoom.setFont(new java.awt.Font("Dubai", 1, 14)); // NOI18N
        lblRoom.setText("Room:");

        lblSchedule.setFont(new java.awt.Font("Dubai", 1, 14)); // NOI18N
        lblSchedule.setText("Schedule:");

        txtSchedule.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtScheduleActionPerformed(evt);
            }
        });

        cmbSemester.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        cmbFaculty.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbFaculty.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbFacultyActionPerformed(evt);
            }
        });

        tblCourses.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Course ID", "Course Name", "Semester", "Faculty", "Capacity", "Room", "Schedule"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblCourses.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(tblCourses);

        btnBack.setText("<<<Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        btnAdd.setText("Add Course");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnUpdate.setText("Update Course");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnDelete.setText("Delete Course");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnReset.setText("Reset");
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnBack)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(37, 37, 37)
                                        .addComponent(lblCourseId)
                                        .addGap(52, 52, 52)
                                        .addComponent(txtCourseId, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addGap(17, 17, 17)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(lblCourseName, javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addComponent(lblSemester, javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addComponent(lblFaculty, javax.swing.GroupLayout.Alignment.TRAILING))
                                                .addGap(52, 52, 52)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                    .addComponent(txtCourseName, javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addComponent(cmbSemester, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                    .addComponent(cmbFaculty, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addComponent(btnAdd)
                                                .addGap(59, 59, 59)
                                                .addComponent(btnUpdate)))))
                                .addGap(60, 60, 60)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lblRoom)
                                        .addGap(52, 52, 52)
                                        .addComponent(txtRoom, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lblSchedule)
                                        .addGap(52, 52, 52)
                                        .addComponent(txtSchedule, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lblCapacity)
                                        .addGap(36, 36, 36)
                                        .addComponent(txtCapacity, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addComponent(btnDelete)
                                        .addGap(60, 60, 60)
                                        .addComponent(btnReset))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(27, 27, 27)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 698, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(273, 273, 273)
                        .addComponent(lblTitle)))
                .addContainerGap(452, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(lblTitle)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCourseId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblCourseId)
                    .addComponent(txtCapacity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblCapacity))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCourseName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblCourseName)
                    .addComponent(txtRoom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblRoom))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSemester)
                    .addComponent(txtSchedule, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblSchedule)
                    .addComponent(cmbSemester, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblFaculty)
                    .addComponent(cmbFaculty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAdd)
                    .addComponent(btnUpdate)
                    .addComponent(btnDelete)
                    .addComponent(btnReset))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 277, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 22, Short.MAX_VALUE)
                .addComponent(btnBack)
                .addGap(65, 65, 65))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtCapacityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCapacityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCapacityActionPerformed

    private void txtRoomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtRoomActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtRoomActionPerformed

    private void txtScheduleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtScheduleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtScheduleActionPerformed

    private void txtCourseIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCourseIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCourseIdActionPerformed

    private void txtCourseNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCourseNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCourseNameActionPerformed

    private void cmbFacultyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbFacultyActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbFacultyActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        CardSequencePanel.remove(this);
    ((java.awt.CardLayout) CardSequencePanel.getLayout()).previous(CardSequencePanel);
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        // TODO add your handling code here:
        
        String id = txtCourseId.getText().trim();
        String name = txtCourseName.getText().trim();
        String semester = (String) cmbSemester.getSelectedItem();
        String capacityStr = txtCapacity.getText().trim();
        String room = txtRoom.getText().trim();
        String schedule = txtSchedule.getText().trim();
        String facultyName = (String) cmbFaculty.getSelectedItem();

        if (id.isEmpty() || name.isEmpty() || semester.equals("-- Select Semester --")) {
            JOptionPane.showMessageDialog(this, "Please fill in all required fields!", "Validation Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // ✅ find matching FacultyProfile by name
        FacultyProfile selectedFaculty = null;
        for (FacultyProfile fp : business.getFacultyDirectory().getFacultyList()) {
            if (fp.getPerson().getName().equals(facultyName)) {
                selectedFaculty = fp;
                break;
            }
        }

        if (selectedFaculty == null) {
            JOptionPane.showMessageDialog(this, "Please select a valid faculty!", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // ✅ Create or get course schedule
        CourseSchedule cs = business.getMasterCourseCatalog().get(semester);
        if (cs == null) {
            cs = business.newCourseSchedule(semester);
        }

        // ✅ Create course and course offer
        Course newCourse = new Course(name, id, 3);
        CourseOffer co = new CourseOffer(newCourse);

        int capacity = 0;
        try {
            capacity = Integer.parseInt(capacityStr.isEmpty() ? "0" : capacityStr);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Invalid capacity number!", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        co.setCapacity(capacity);
        co.setRoom(room);
        co.setSchedule(schedule);
        co.AssignAsTeacher(selectedFaculty);
        cs.getSchedule().add(co);

        JOptionPane.showMessageDialog(this, "Course added successfully!");
        refreshTable();
        clearFields();
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        
        
        int selectedRow = tblCourses.getSelectedRow();
    if (selectedRow < 0) {
        JOptionPane.showMessageDialog(this, "Select a course to delete.");
        return;
    }

    String courseId = (String) tblCourses.getValueAt(selectedRow, 0);
    String semester = (String) tblCourses.getValueAt(selectedRow, 2);
    CourseSchedule cs = business.getMasterCourseCatalog().get(semester);

    CourseOffer target = null;
    for (CourseOffer co : cs.getSchedule()) {
        if (co.getCourseNumber().equals(courseId)) {
            target = co;
            break;
        }
    }

    if (target != null) {
        cs.getSchedule().remove(target);
        JOptionPane.showMessageDialog(this, "Course deleted successfully!");
    }

    refreshTable();
    
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblCourses.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(this, "Select a course to update.");
            return;
        }

        String courseId = (String) tblCourses.getValueAt(selectedRow, 0);
        String semester = (String) tblCourses.getValueAt(selectedRow, 2);
        CourseSchedule cs = business.getMasterCourseCatalog().get(semester);

        for (CourseOffer co : cs.getSchedule()) {
            if (co.getCourseNumber().equals(courseId)) {
                try {
                    int cap = Integer.parseInt(txtCapacity.getText().trim());
                    co.setCapacity(cap);
                } catch (NumberFormatException e) {
                    JOptionPane.showMessageDialog(this, "Invalid capacity number!", "Error", JOptionPane.ERROR_MESSAGE);
                    return;
                }

                co.setRoom(txtRoom.getText());
                co.setSchedule(txtSchedule.getText());
                JOptionPane.showMessageDialog(this, "Course updated successfully!");
                break;
            }
        }
        refreshTable();
        clearFields();
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
        // TODO add your handling code here:
        txtCourseId.setText("");
    txtCourseName.setText("");
    txtCapacity.setText("");
    txtRoom.setText("");
    txtSchedule.setText("");
    cmbSemester.setSelectedIndex(0);
    cmbFaculty.setSelectedIndex(0);
    }//GEN-LAST:event_btnResetActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnReset;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JComboBox<String> cmbFaculty;
    private javax.swing.JComboBox<String> cmbSemester;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblCapacity;
    private javax.swing.JLabel lblCourseId;
    private javax.swing.JLabel lblCourseName;
    private javax.swing.JLabel lblFaculty;
    private javax.swing.JLabel lblRoom;
    private javax.swing.JLabel lblSchedule;
    private javax.swing.JLabel lblSemester;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JTable tblCourses;
    private javax.swing.JTextField txtCapacity;
    private javax.swing.JTextField txtCourseId;
    private javax.swing.JTextField txtCourseName;
    private javax.swing.JTextField txtRoom;
    private javax.swing.JTextField txtSchedule;
    // End of variables declaration//GEN-END:variables
}
