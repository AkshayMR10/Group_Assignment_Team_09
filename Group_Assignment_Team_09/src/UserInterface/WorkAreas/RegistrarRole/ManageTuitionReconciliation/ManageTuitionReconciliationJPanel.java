/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UserInterface.WorkAreas.RegistrarRole.ManageTuitionReconciliation;

import Business.Business;
import Business.CourseSchedule.CourseOffer;
import Business.CourseSchedule.CourseSchedule;
import Business.CourseSchedule.Seat;
import Business.Profiles.StudentProfile;
import java.util.HashMap;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author anush
 */
public class ManageTuitionReconciliationJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManageTuitionReconciliationJPanel
     */
    JPanel CardSequencePanel;
    Business business;
    public ManageTuitionReconciliationJPanel(Business b, JPanel jp) {
        initComponents();
        this.business = b;
        this.CardSequencePanel = jp;
        populateSemesterCombo();
    }
    
    private void populateSemesterCombo() {
        cmbSemester.removeAllItems();
        cmbSemester.addItem("-- Select Semester --");

        HashMap<String, CourseSchedule> schedules = business.getMasterCourseCatalog();
        for (String semester : schedules.keySet()) {
            cmbSemester.addItem(semester);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        lblSelectSemester = new javax.swing.JLabel();
        cmbSemester = new javax.swing.JComboBox<>();
        btnGenerate = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblRevenueSummary = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblTuitionSummary = new javax.swing.JTable();
        lblTotalRevenue = new javax.swing.JLabel();
        lblUnpaidCount = new javax.swing.JLabel();
        btnBack = new javax.swing.JButton();

        setBackground(new java.awt.Color(0, 153, 153));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setText("Tuition & Financial Reconciliation");

        lblSelectSemester.setText("Select Semester:");

        cmbSemester.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        btnGenerate.setText("Generate Report");
        btnGenerate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGenerateActionPerformed(evt);
            }
        });

        tblRevenueSummary.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Department", "Semester", "Revenue", "Collected", "Unpaid"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblRevenueSummary);

        tblTuitionSummary.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Student ID", "Name", "Semester", "Amount Paid", "Outstanding Balance", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblTuitionSummary);
        if (tblTuitionSummary.getColumnModel().getColumnCount() > 0) {
            tblTuitionSummary.getColumnModel().getColumn(5).setHeaderValue("Status");
        }

        lblTotalRevenue.setText("Total Revenue:");

        lblUnpaidCount.setText("Unpaid Students:");

        btnBack.setText(">>>Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 800, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(124, 124, 124)
                            .addComponent(btnGenerate))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(60, 60, 60)
                            .addComponent(lblSelectSemester, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(66, 66, 66)
                            .addComponent(cmbSemester, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(52, 52, 52)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 800, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(37, 37, 37)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(btnBack)
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(73, 73, 73)
                                    .addComponent(lblTotalRevenue)
                                    .addGap(286, 286, 286)
                                    .addComponent(lblUnpaidCount))
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 417, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(296, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSelectSemester)
                    .addComponent(cmbSemester, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                .addComponent(btnGenerate)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTotalRevenue)
                    .addComponent(lblUnpaidCount))
                .addGap(26, 26, 26)
                .addComponent(btnBack)
                .addGap(52, 52, 52))
        );
    }// </editor-fold>//GEN-END:initComponents
    private void loadTuitionReport(String semester) {
        DefaultTableModel model = (DefaultTableModel) tblTuitionSummary.getModel();
        model.setRowCount(0);

        HashMap<String, CourseSchedule> schedules = business.getMasterCourseCatalog();
        CourseSchedule cs = schedules.get(semester);

        if (cs == null) {
            JOptionPane.showMessageDialog(this, "No data found for " + semester);
            return;
        }

        int totalUnpaid = 0;

        for (CourseOffer co : cs.getSchedule()) {
            for (Seat seat : co.getSeatList()) {
                if (seat.isOccupied() && seat.getSeatAssignment() != null) {
                    StudentProfile sp = seat.getSeatAssignment().getStudentProfile();
                    String studentId = sp.getPerson().getPersonId();
                    String studentName = sp.getPerson().getName();

                    // For simplicity, assume $1000 per enrolled course
                    double courseFee = 1000;
                    double paidAmount = Math.random() > 0.7 ? courseFee : (Math.random() > 0.4 ? courseFee / 2 : 0); 
                    double balance = courseFee - paidAmount;
                    String status = balance == 0 ? "Paid" : (paidAmount == 0 ? "Unpaid" : "Partial");

                    Object[] row = new Object[6];
                    row[0] = studentId;
                    row[1] = studentName;
                    row[2] = semester;
                    row[3] = "$" + String.format("%.2f", paidAmount);
                    row[4] = "$" + String.format("%.2f", balance);
                    row[5] = status;

                    model.addRow(row);

                    if (balance > 0) totalUnpaid++;
                }
            }
        }

        lblUnpaidCount.setText("Unpaid Students: " + totalUnpaid);
    }

    /**
     * Generates revenue summary per department and total revenue
     */
    private void loadRevenueSummary(String semester) {
        DefaultTableModel model = (DefaultTableModel) tblRevenueSummary.getModel();
    model.setRowCount(0);

    HashMap<String, CourseSchedule> schedules = business.getMasterCourseCatalog();
    CourseSchedule cs = schedules.get(semester);
    if (cs == null) return;

    HashMap<String, Double[]> deptRevenue = new HashMap<>();

    for (CourseOffer co : cs.getSchedule()) {
        String dept = co.getSubjectCourse().getName(); // or map to a real department if you have one
        deptRevenue.putIfAbsent(dept, new Double[]{0.0, 0.0, 0.0}); // [revenue, collected, unpaid]

        // *** FIX: use explicit type + correct getter ***
        for (Seat seat : co.getSeatList()) {
            if (seat.isOccupied() && seat.getSeatAssignment() != null) {
                double courseFee = 1000; // or derive from credits * price
                double paidAmount = Math.random() < 0.7 ? courseFee : 0; // replace with real payment data
                double unpaid = courseFee - paidAmount;


                    Double[] values = deptRevenue.get(dept);
                    values[0] += courseFee;
                    values[1] += paidAmount;
                    values[2] += unpaid;
                    deptRevenue.put(dept, values);
                }
            }
        }

        double totalRevenue = 0;
        for (String dept : deptRevenue.keySet()) {
            Double[] val = deptRevenue.get(dept);
            Object[] row = new Object[5];
            row[0] = dept;
            row[1] = semester;
            row[2] = "$" + String.format("%.2f", val[0]);
            row[3] = "$" + String.format("%.2f", val[1]);
            row[4] = "$" + String.format("%.2f", val[2]);
            ((DefaultTableModel) tblRevenueSummary.getModel()).addRow(row);
            totalRevenue += val[0];
        }

        lblTotalRevenue.setText("Total Revenue: $" + String.format("%,.2f", totalRevenue));
    }
    
    private void btnGenerateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGenerateActionPerformed
        // TODO add your handling code here:
        
        String semester = (String) cmbSemester.getSelectedItem();
        if (semester == null || semester.equals("-- Select Semester --")) {
            JOptionPane.showMessageDialog(this, "Please select a semester first!");
            return;
        }

        loadTuitionReport(semester);
        loadRevenueSummary(semester);
        
    }//GEN-LAST:event_btnGenerateActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        CardSequencePanel.remove(this);
        ((java.awt.CardLayout) CardSequencePanel.getLayout()).previous(CardSequencePanel);
    }//GEN-LAST:event_btnBackActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnGenerate;
    private javax.swing.JComboBox<String> cmbSemester;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblSelectSemester;
    private javax.swing.JLabel lblTotalRevenue;
    private javax.swing.JLabel lblUnpaidCount;
    private javax.swing.JTable tblRevenueSummary;
    private javax.swing.JTable tblTuitionSummary;
    // End of variables declaration//GEN-END:variables
}
