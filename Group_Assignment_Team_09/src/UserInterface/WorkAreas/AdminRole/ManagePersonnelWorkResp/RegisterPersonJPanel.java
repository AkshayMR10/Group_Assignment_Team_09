/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UserInterface.WorkAreas.AdminRole.ManagePersonnelWorkResp;

import Business.Business;
import Business.Person.Person;
import Business.Person.PersonDirectory;
import Business.Profiles.*;
import Business.UserAccounts.UserAccount;
import Business.UserAccounts.UserAccountDirectory;
import Business.Validation.InputValidator;
import javax.swing.JPanel;
import javax.swing.JOptionPane;

/**
 *
 * @author aksha
 */
public class RegisterPersonJPanel extends javax.swing.JPanel {

    JPanel CardSequencePanel;
    Business business;

    /**
     * Creates new form RegisterPersonJPanel1
     */
    public RegisterPersonJPanel(Business bz, JPanel jp) {
        CardSequencePanel = jp;
        this.business = bz;
        initComponents();

        // Populate role dropdown
        roleComboBox.removeAllItems();
        roleComboBox.addItem("Student");
        roleComboBox.addItem("Faculty");
        roleComboBox.addItem("Registrar");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        emailTextField = new javax.swing.JTextField();
        phoneTextField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        addressTextField = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        departmentTextField = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        usernameTextField = new javax.swing.JTextField();
        passwordTextField = new javax.swing.JTextField();
        registerButton = new javax.swing.JButton();
        clearButton = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        nameTextField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        roleComboBox = new javax.swing.JComboBox<>();
        backButton = new javax.swing.JButton();

        setBackground(new java.awt.Color(0, 153, 153));

        jLabel9.setText("Username:");

        jLabel10.setText("Password:");

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setText("Register New Person");

        jLabel3.setText("Email *");

        jLabel4.setText("Phone:");

        jLabel5.setText("Address:");

        jLabel6.setText("Department:");

        registerButton.setBackground(new java.awt.Color(0, 204, 255));
        registerButton.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        registerButton.setForeground(new java.awt.Color(255, 255, 255));
        registerButton.setText("Register");
        registerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registerButtonActionPerformed(evt);
            }
        });

        clearButton.setBackground(new java.awt.Color(153, 153, 153));
        clearButton.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        clearButton.setForeground(new java.awt.Color(255, 255, 255));
        clearButton.setText("Clear");
        clearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearButtonActionPerformed(evt);
            }
        });

        jLabel11.setText("Full Name *");

        jLabel2.setText("Role *");

        roleComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        backButton.setText("<<< Back");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 299, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel6)
                                    .addComponent(backButton))
                                .addGap(66, 66, 66)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(emailTextField)
                            .addComponent(phoneTextField)
                            .addComponent(addressTextField)
                            .addComponent(usernameTextField)
                            .addComponent(passwordTextField)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(registerButton, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(43, 43, 43)
                                .addComponent(clearButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(nameTextField)
                            .addComponent(departmentTextField)
                            .addComponent(roleComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(374, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(nameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(emailTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(phoneTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(addressTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(roleComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(departmentTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(usernameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(passwordTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(registerButton)
                    .addComponent(clearButton)
                    .addComponent(backButton))
                .addContainerGap(301, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void registerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registerButtonActionPerformed
        // TODO add your handling code here:
        // Get form data
        String name = nameTextField.getText().trim();
        String email = emailTextField.getText().trim();
        String phone = phoneTextField.getText().trim();
        String address = addressTextField.getText().trim();
        String role = (String) roleComboBox.getSelectedItem();
        String department = departmentTextField.getText().trim();
        String username = usernameTextField.getText().trim();
        String password = passwordTextField.getText().trim();

        // ========== ENHANCED VALIDATION ==========
        // Validate name (required)
        if (!InputValidator.isNotEmpty(name)) {
            JOptionPane.showMessageDialog(this,
                    "Please enter full name",
                    "Validation Error",
                    JOptionPane.ERROR_MESSAGE);
            nameTextField.requestFocus();
            return;
        }

        // Validate email (required and format)
        if (!InputValidator.isNotEmpty(email)) {
            JOptionPane.showMessageDialog(this,
                    "Please enter email address",
                    "Validation Error",
                    JOptionPane.ERROR_MESSAGE);
            emailTextField.requestFocus();
            return;
        }

        if (!InputValidator.isValidEmail(email)) {
            JOptionPane.showMessageDialog(this,
                    InputValidator.getEmailErrorMessage(email),
                    "Invalid Email Format",
                    JOptionPane.ERROR_MESSAGE);
            emailTextField.requestFocus();
            return;
        }

        // Optional: Suggest Northeastern email (warning, not error)
        if (!InputValidator.isNortheasternEmail(email)) {
            int response = JOptionPane.showConfirmDialog(this,
                    "Email is not a Northeastern address (@northeastern.edu).\n"
                    + "For university personnel, please use @northeastern.edu\n\n"
                    + "Continue with this email anyway?",
                    "Email Domain Notice",
                    JOptionPane.YES_NO_OPTION,
                    JOptionPane.WARNING_MESSAGE);

            if (response != JOptionPane.YES_OPTION) {
                emailTextField.requestFocus();
                return;
            }
        }

        // Validate phone number (optional but if provided, must be valid)
        if (InputValidator.isNotEmpty(phone) && !InputValidator.isValidPhone(phone)) {
            JOptionPane.showMessageDialog(this,
                    InputValidator.getPhoneErrorMessage(phone),
                    "Invalid Phone Number",
                    JOptionPane.ERROR_MESSAGE);
            phoneTextField.requestFocus();
            return;
        }

        // Format phone number if valid
        if (InputValidator.isNotEmpty(phone)) {
            phone = InputValidator.formatPhone(phone);
            phoneTextField.setText(phone); // Update display
        }

        // Check for duplicate email
        PersonDirectory personDir = business.getPersonDirectory();
        if (personDir.isDuplicateEmail(email)) {
            JOptionPane.showMessageDialog(this,
                    "This email address is already registered in the system.\n"
                    + "Email: " + email + "\n\n"
                    + "Please use a different email address.",
                    "Duplicate Email",
                    JOptionPane.ERROR_MESSAGE);
            emailTextField.requestFocus();
            return;
        }

        // Generate unique University ID
        String universityId = personDir.generateUniversityId();

        // Create Person
        String personId = String.valueOf(System.currentTimeMillis()); // Unique ID
        Person person = personDir.newPerson(personId);
        person.setUniversityId(universityId);
        person.setName(name);
        person.setEmail(email);
        person.setPhone(phone);
        person.setAddress(address);

        // Create Profile based on role
        Profile profile = null;

        if (role.equals("Student")) {
            StudentDirectory studentDir = business.getStudentDirectory();
            StudentProfile sp = studentDir.newStudentProfile(person);
            sp.setDepartment(department);
            sp.setProgram("MSIS"); // Default program
            sp.setEnrollmentDate(java.time.LocalDate.now().toString());
            profile = sp;

        } else if (role.equals("Faculty")) {
            FacultyDirectory facultyDir = business.getFacultyDirectory();
            FacultyProfile fp = facultyDir.newFacultyProfile(person);
            fp.setDepartment(department);
            fp.setHireDate(java.time.LocalDate.now().toString());
            profile = fp;

        } else if (role.equals("Registrar")) {
            RegistrarDirectory registrarDir = business.getRegistrarDirectory();
            RegistrarProfile rp = registrarDir.newRegistrarProfile(person);
            rp.setDepartment(department);
            profile = rp;
        }

        // Create User Account (optional but recommended)
        if (InputValidator.isNotEmpty(username) && profile != null) {
            // Validate username is not duplicate
            UserAccountDirectory uaDir = business.getUserAccountDirectory();
            boolean usernameTaken = false;
            for (UserAccount ua : uaDir.getUserAccountList()) {
                if (ua.getUserLoginName().equalsIgnoreCase(username)) {
                    usernameTaken = true;
                    break;
                }
            }

            if (usernameTaken) {
                JOptionPane.showMessageDialog(this,
                        "Username '" + username + "' is already taken.\n"
                        + "Person registered successfully but user account NOT created.\n\n"
                        + "University ID: " + universityId,
                        "Username Already Exists",
                        JOptionPane.WARNING_MESSAGE);
            } else {
                // Validate password
                if (!InputValidator.isValidPassword(password)) {
                    JOptionPane.showMessageDialog(this,
                            "Password must be at least 4 characters long.\n"
                            + "Person registered successfully but user account NOT created.\n\n"
                            + "University ID: " + universityId,
                            "Invalid Password",
                            JOptionPane.WARNING_MESSAGE);
                } else {
                    UserAccount ua = uaDir.newUserAccount(profile, username, password);
                }
            }
        }

        // Show success message
        JOptionPane.showMessageDialog(this,
                "Person registered successfully!\n\n"
                + "University ID: " + universityId + "\n"
                + "Name: " + name + "\n"
                + "Email: " + email + "\n"
                + "Phone: " + (phone.isEmpty() ? "N/A" : phone) + "\n"
                + "Role: " + role + "\n"
                + "Department: " + (department.isEmpty() ? "N/A" : department),
                "Registration Successful",
                JOptionPane.INFORMATION_MESSAGE);

        // Clear form
        clearForm();
    }//GEN-LAST:event_registerButtonActionPerformed

    private void clearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearButtonActionPerformed
        // TODO add your handling code here:
        clearForm();
    }//GEN-LAST:event_clearButtonActionPerformed

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        // TODO add your handling code here:
        CardSequencePanel.remove(this);
        ((java.awt.CardLayout) CardSequencePanel.getLayout()).next(CardSequencePanel);
    }//GEN-LAST:event_backButtonActionPerformed

    private void clearForm() {
        nameTextField.setText("");
        emailTextField.setText("");
        phoneTextField.setText("");
        addressTextField.setText("");
        departmentTextField.setText("");
        usernameTextField.setText("");
        passwordTextField.setText("****");
        roleComboBox.setSelectedIndex(0);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField addressTextField;
    private javax.swing.JButton backButton;
    private javax.swing.JButton clearButton;
    private javax.swing.JTextField departmentTextField;
    private javax.swing.JTextField emailTextField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField nameTextField;
    private javax.swing.JTextField passwordTextField;
    private javax.swing.JTextField phoneTextField;
    private javax.swing.JButton registerButton;
    private javax.swing.JComboBox<String> roleComboBox;
    private javax.swing.JTextField usernameTextField;
    // End of variables declaration//GEN-END:variables
}
