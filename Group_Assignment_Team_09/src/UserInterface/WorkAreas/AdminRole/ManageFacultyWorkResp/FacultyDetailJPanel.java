/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UserInterface.WorkAreas.AdminRole.ManageFacultyWorkResp;

import Business.Business;
import Business.CourseSchedule.CourseOffer;
import Business.CourseSchedule.CourseSchedule;
import Business.Person.Person;
import Business.Profiles.FacultyProfile;
import Business.Validation.InputValidator;
import java.util.ArrayList;
import java.util.HashMap;
import javax.swing.JPanel;
import javax.swing.JOptionPane;

/**
 *
 * @author aksha
 */
public class FacultyDetailJPanel extends javax.swing.JPanel {

    JPanel CardSequencePanel;
    Business business;
    FacultyProfile facultyProfile;
    ManageFacultyJPanel parentPanel;

    /**
     * Creates new form FacultyDetailJPanel1
     */
    public FacultyDetailJPanel(Business bz, JPanel jp, FacultyProfile fp, ManageFacultyJPanel parent) {
        CardSequencePanel = jp;
        this.business = bz;
        this.facultyProfile = fp;
        this.parentPanel = parent;
        initComponents();

        // Populate form with faculty data
        populateForm();
    }

    private void populateForm() {
        Person p = facultyProfile.getPerson();

        universityIdLabel.setText(p.getUniversityId());
        nameTextField.setText(p.getName());
        emailTextField.setText(p.getEmail());
        phoneTextField.setText(p.getPhone() != null ? p.getPhone() : "");
        addressTextField.setText(p.getAddress() != null ? p.getAddress() : "");
        departmentTextField.setText(facultyProfile.getDepartment() != null ? facultyProfile.getDepartment() : "");
        officeTextField.setText(facultyProfile.getOffice() != null ? facultyProfile.getOffice() : "");
        officeHoursTextField.setText(facultyProfile.getOfficeHours() != null ? facultyProfile.getOfficeHours() : "");
        hireDateTextField.setText(facultyProfile.getHireDate() != null ? facultyProfile.getHireDate() : "");
        specializationTextField.setText(facultyProfile.getSpecialization() != null ? facultyProfile.getSpecialization() : "");
        displayAssignedCourses();
    }

    //Display all courses assigned to this faculty member
    private void displayAssignedCourses() {
        ArrayList<CourseOffer> courses = business.getCourseOffersForFaculty(facultyProfile);

        if (courses.isEmpty()) {
            assignedCoursesTextArea.setText("Not Assigned to Any Courses");
            assignedCoursesTextArea.setForeground(new java.awt.Color(200, 200, 200));
        } else {
            StringBuilder sb = new StringBuilder();

            // Group by semester
            HashMap<String, ArrayList<CourseOffer>> bySemester = new HashMap<>();

            for (CourseOffer co : courses) {
                // Find which semester this course belongs to
                for (String semester : business.getMasterCourseCatalog().keySet()) {
                    CourseSchedule cs = business.getMasterCourseCatalog().get(semester);
                    if (cs.getSchedule().contains(co)) {
                        bySemester.putIfAbsent(semester, new ArrayList<>());
                        bySemester.get(semester).add(co);
                        break;
                    }
                }
            }

            // Format output
            for (String semester : bySemester.keySet()) {
                sb.append(semester).append(":\n");
                for (CourseOffer co : bySemester.get(semester)) {
                    sb.append("  â€¢ ").append(co.getCourseNumber())
                            .append(" - ").append(co.getSubjectCourse().getName())
                            .append(" (").append(co.getEnrolledCount()).append(" students enrolled)")
                            .append("\n");
                }
                sb.append("\n");
            }

            assignedCoursesTextArea.setText(sb.toString());
            assignedCoursesTextArea.setForeground(new java.awt.Color(0, 0, 0));
        }

        // Make it non-editable and styled
        assignedCoursesTextArea.setEditable(false);
        assignedCoursesTextArea.setBackground(new java.awt.Color(240, 240, 240));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        universityIdLabel = new javax.swing.JLabel();
        emailTextField = new javax.swing.JTextField();
        phoneTextField = new javax.swing.JTextField();
        addressTextField = new javax.swing.JTextField();
        departmentTextField = new javax.swing.JTextField();
        officeTextField = new javax.swing.JTextField();
        officeHoursTextField = new javax.swing.JTextField();
        hireDateTextField = new javax.swing.JTextField();
        specializationTextField = new javax.swing.JTextField();
        saveButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        nameTextField = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        assignedCoursesTextArea = new javax.swing.JTextArea();

        setBackground(new java.awt.Color(0, 153, 153));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setText("Faculty Details");

        jLabel2.setText("University ID:");

        jLabel3.setText("Email:");

        jLabel4.setText("Phone:");

        jLabel5.setText("Address:");

        jLabel6.setText("Department:");

        jLabel7.setText("Office:");

        jLabel8.setText("Office Hours:");

        jLabel9.setText("Hire Date:");

        jLabel10.setText("Specialization:");

        saveButton.setBackground(new java.awt.Color(0, 204, 255));
        saveButton.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        saveButton.setForeground(new java.awt.Color(255, 255, 255));
        saveButton.setText("Save Changes");
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });

        cancelButton.setBackground(new java.awt.Color(153, 153, 153));
        cancelButton.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        cancelButton.setForeground(new java.awt.Color(255, 255, 255));
        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        jLabel11.setText("Name:");

        jLabel12.setText("Assigned Course:");

        assignedCoursesTextArea.setColumns(20);
        assignedCoursesTextArea.setRows(5);
        jScrollPane1.setViewportView(assignedCoursesTextArea);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, 115, Short.MAX_VALUE))
                            .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(universityIdLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(emailTextField)
                            .addComponent(phoneTextField)
                            .addComponent(addressTextField)
                            .addComponent(departmentTextField)
                            .addComponent(officeTextField)
                            .addComponent(officeHoursTextField)
                            .addComponent(hireDateTextField)
                            .addComponent(specializationTextField)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(saveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(43, 43, 43)
                                .addComponent(cancelButton, javax.swing.GroupLayout.DEFAULT_SIZE, 120, Short.MAX_VALUE))
                            .addComponent(nameTextField)
                            .addComponent(jScrollPane1))))
                .addContainerGap(329, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(universityIdLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(nameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(emailTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(phoneTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(addressTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(departmentTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(officeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(officeHoursTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(hireDateTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(specializationTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addGap(120, 120, 120)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(saveButton)
                            .addComponent(cancelButton)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(56, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        // TODO add your handling code here:
        // Get form data
        String name = nameTextField.getText().trim();
        String email = emailTextField.getText().trim();
        String phone = phoneTextField.getText().trim();
        String address = addressTextField.getText().trim();
        String department = departmentTextField.getText().trim();
        String office = officeTextField.getText().trim();
        String officeHours = officeHoursTextField.getText().trim();
        String hireDate = hireDateTextField.getText().trim();
        String specialization = specializationTextField.getText().trim();

        // Validate required fields
        if (!InputValidator.isNotEmpty(name)) {
            JOptionPane.showMessageDialog(this, "Please enter full name", "Validation Error", JOptionPane.ERROR_MESSAGE);
            nameTextField.requestFocus();
            return;
        }

        if (!InputValidator.isNotEmpty(email)) {
            JOptionPane.showMessageDialog(this, "Please enter email", "Validation Error", JOptionPane.ERROR_MESSAGE);
            emailTextField.requestFocus();
            return;
        }

        // Email validation
        if (!InputValidator.isValidEmail(email)) {
            JOptionPane.showMessageDialog(this,
                    InputValidator.getEmailErrorMessage(email),
                    "Invalid Email Format",
                    JOptionPane.ERROR_MESSAGE);
            emailTextField.requestFocus();
            return;
        }

        // Phone validation
        if (InputValidator.isNotEmpty(phone) && !InputValidator.isValidPhone(phone)) {
            JOptionPane.showMessageDialog(this,
                    InputValidator.getPhoneErrorMessage(phone),
                    "Invalid Phone Number",
                    JOptionPane.ERROR_MESSAGE);
            phoneTextField.requestFocus();
            return;
        }

        // Format phone if valid
        if (InputValidator.isNotEmpty(phone)) {
            phone = InputValidator.formatPhone(phone);
        }

        // Update Person data
        Person p = facultyProfile.getPerson();
        p.setName(name);
        p.setEmail(email);
        p.setPhone(phone);
        p.setAddress(address);

        // Update Faculty-specific data
        facultyProfile.setDepartment(department);
        facultyProfile.setOffice(office);
        facultyProfile.setOfficeHours(officeHours);
        facultyProfile.setHireDate(hireDate);
        facultyProfile.setSpecialization(specialization);

        JOptionPane.showMessageDialog(this, "Faculty information updated successfully!", "Success", JOptionPane.INFORMATION_MESSAGE);

        // Refresh parent table
        parentPanel.refreshTable();

        // Go back
        CardSequencePanel.remove(this);
        ((java.awt.CardLayout) CardSequencePanel.getLayout()).next(CardSequencePanel);
    }//GEN-LAST:event_saveButtonActionPerformed

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        // TODO add your handling code here:
        CardSequencePanel.remove(this);
        ((java.awt.CardLayout) CardSequencePanel.getLayout()).next(CardSequencePanel);
    }//GEN-LAST:event_cancelButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField addressTextField;
    private javax.swing.JTextArea assignedCoursesTextArea;
    private javax.swing.JButton cancelButton;
    private javax.swing.JTextField departmentTextField;
    private javax.swing.JTextField emailTextField;
    private javax.swing.JTextField hireDateTextField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField nameTextField;
    private javax.swing.JTextField officeHoursTextField;
    private javax.swing.JTextField officeTextField;
    private javax.swing.JTextField phoneTextField;
    private javax.swing.JButton saveButton;
    private javax.swing.JTextField specializationTextField;
    private javax.swing.JLabel universityIdLabel;
    // End of variables declaration//GEN-END:variables
}
