/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UserInterface.WorkAreas.StudentRole;

import Business.CourseSchedule.SeatAssignment;
import Business.Profiles.StudentProfile;
import ManageStudentModel.Course;
import java.awt.CardLayout;
import java.io.File;
import java.util.ArrayList;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author Amrin
 */
public class StudentCourse extends javax.swing.JPanel {
private StudentProfile student;
    JPanel CardSequencePanel;
    ArrayList<Coursework> courseworkList;
public StudentCourse(StudentProfile student) {
    this.student = student;
    initComponents();
    courseworkList = new ArrayList<>();

    populateCourseworkFromStudentCourses();
    populateTable();
    addListeners();
}

    // Dummy Coursework class
    public static class Coursework {
        private String courseName;
        private String assignmentTitle;
        private String dueDate;
        private String submissionStatus;
        private String fileName;
        private String grade;

        public Coursework(String courseName, String assignmentTitle, String dueDate) {
            this.courseName = courseName;
            this.assignmentTitle = assignmentTitle;
            this.dueDate = dueDate;
            this.submissionStatus = "Pending";
            this.fileName = "";
            this.grade = "";
        }

        public String getCourseName() { return courseName; }
        public String getAssignmentTitle() { return assignmentTitle; }
        public String getDueDate() { return dueDate; }
        public String getSubmissionStatus() { return submissionStatus; }
        public String getFileName() { return fileName; }
        public String getGrade() { return grade; }

        public void setSubmissionStatus(String status) { this.submissionStatus = status; }
        public void setFileName(String fileName) { this.fileName = fileName; }
        public void setGrade(String grade) { this.grade = grade; }
    }

private void populateCourseworkFromStudentCourses() {
    if (student.getCourseList() == null || student.getCourseList().isEmpty()) {
        JOptionPane.showMessageDialog(null, "No enrolled courses found for this student.");
        return;
    }

for (SeatAssignment sa : student.getCourseList()) {
    Business.CourseCatalog.Course c = sa.getAssociatedCourse();
    Coursework cw = new Coursework(
        c.getCourseId() + " - " + c.getCourseName(),
        "Assignment 1",      // placeholder for now
        "11/05/2025"         // placeholder date
    );
    courseworkList.add(cw);
}

}

    private void populateTable() {
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        model.setRowCount(0);
        for (Coursework cw : courseworkList) {
            model.addRow(new Object[]{
                cw.getCourseName(),
                cw.getAssignmentTitle(),
                cw.getDueDate(),
                cw.getSubmissionStatus(),
                cw.getFileName()
            });
        }
    }

    private void addListeners() {
        // Enable upload button only when a row is selected
        btnuploadsubmit.setEnabled(false);
        jTable1.getSelectionModel().addListSelectionListener(e -> {
            btnuploadsubmit.setEnabled(jTable1.getSelectedRow() != -1);
        });

        btngrade.addActionListener(e -> {
            int selectedRow = jTable1.getSelectedRow();
            if (selectedRow == -1) {
                JOptionPane.showMessageDialog(null, "Please select an assignment to view grade.");
                return;
            }

            Coursework cw = courseworkList.get(selectedRow);
            // Dummy grade assignment
            if (cw.getGrade().isEmpty()) {
                cw.setGrade("A"); // or random grade
            }

            JOptionPane.showMessageDialog(null,
                    "Grade for " + cw.getAssignmentTitle() + ": " + cw.getGrade());
        });
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblcourse = new javax.swing.JLabel();
        btnback = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        btnuploadsubmit = new javax.swing.JButton();
        btngrade = new javax.swing.JButton();

        setBackground(new java.awt.Color(0, 204, 204));

        lblcourse.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblcourse.setText("MANAGE COURSE");

        btnback.setText("Back");
        btnback.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnbackActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Course Name", "Assignment Title", "Due Date", "Status", "File Name"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        btnuploadsubmit.setText("Upload and Submit");
        btnuploadsubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnuploadsubmitActionPerformed(evt);
            }
        });

        btngrade.setText("View Grade");
        btngrade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btngradeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(69, 69, 69)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 581, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnback)
                                .addGap(115, 115, 115)
                                .addComponent(lblcourse))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(191, 191, 191)
                        .addComponent(btnuploadsubmit)
                        .addGap(68, 68, 68)
                        .addComponent(btngrade)))
                .addContainerGap(50, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblcourse)
                    .addComponent(btnback))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 329, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnuploadsubmit)
                    .addComponent(btngrade))
                .addContainerGap(53, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnbackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnbackActionPerformed
        // TODO add your handling code here:
        CardLayout layout = (CardLayout) this.getParent().getLayout();
        layout.previous(this.getParent());
    }//GEN-LAST:event_btnbackActionPerformed

    private void btnuploadsubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnuploadsubmitActionPerformed
        // TODO add your handling code here:
            int selectedRow = jTable1.getSelectedRow();
    if (selectedRow == -1) {
        JOptionPane.showMessageDialog(null, "Please select an assignment first.");
        return;
    }

    JFileChooser fileChooser = new JFileChooser();
    int result = fileChooser.showOpenDialog(null);

    if (result == JFileChooser.APPROVE_OPTION) {
        File selectedFile = fileChooser.getSelectedFile();
        String fileName = selectedFile.getName();

        // Update table
        jTable1.setValueAt("Submitted", selectedRow, 3); // Status column
        jTable1.setValueAt(fileName, selectedRow, 4);    // File Name column

        JOptionPane.showMessageDialog(null, "File '" + fileName + "' uploaded & submitted!");
    }
    }//GEN-LAST:event_btnuploadsubmitActionPerformed

    private void btngradeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btngradeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btngradeActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnback;
    private javax.swing.JButton btngrade;
    private javax.swing.JButton btnuploadsubmit;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel lblcourse;
    // End of variables declaration//GEN-END:variables
}
